# Cross-compile https://github.com/fprime-community/fprime-system-reference

name: "External Repo: System Reference"

on:
  push:
    branches: [ devel, release/**, ci/add-system-ref ]
  # pull_request:
  #   # The branches below must be a subset of the branches above
  #   branches: [ devel, release/** ]
  #   paths-ignore:
  #     - 'docs/**'
  #     - '**.md'
  #     - '.github/actions/spelling/**'
  #     - '.github/ISSUE_TEMPLATE/**'

env:
  RPI_TOOLCHAIN_DIR: /tmp/rpi-toolchain
  PKG_CONFIG_PATH: ${{ github.workspace }}/libcamera/lib/pkconfig

jobs:
  get-branch:
    name: "Get target branch"
    uses: ./.github/workflows/reusable-get-pr-branch.yml
    with:
      target_repository: fprime-community/fprime-system-reference
      default_target_ref: main
  
  cross-compilation:
    name: "Cross Compilation"
    runs-on: ubuntu-22.04
    needs: get-branch
    steps:
      - name: "Checkout target repository"
        uses: actions/checkout@v4
        with:
          submodules: true
          repository: fprime-community/fprime-system-reference
          ref: ${{ needs.get-branch.outputs.target-branch }}
      - name: "Overlay current FÂ´ revision"
        uses: actions/checkout@v4
        with:
          submodules: true
          path: ./fprime
          fetch-depth: 0
      - uses: ./fprime/.github/actions/setup
        with:
          location: ./fprime
      - name: "Install meson and ninja"
        run: |
          pip3 install meson ninja ply
        shell: bash
      - name: "Setup RPI Toolchain"
        uses: fprime-community/setup-rpi-sysroot@main
        with:
          # libcamera requires 8+
          toolchain: "https://developer.arm.com/-/media/Files/downloads/gnu-a/8.3-2019.03/binrel/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf.tar.xz"
      - name: "Add RPI Toolchain to PATH"
        run: |
          echo "PATH=$RPI_TOOLCHAIN_DIR/bin:$PATH" >> $GITHUB_ENV
      - name: Build libcamera
        run: |
          cd libcamera
          meson setup build -Dprefix=${{ github.workspace }}/libcamera/build/ -Dpipelines=rpi/vc4 -Dipas=rpi/vc4 --cross-file ../libcamera-aarch32.txt
          cd build
          ninja
          ninja install
      - name: "Generate build cache"
        working-directory: SystemReference
        run: |
          fprime-util generate raspberrypi
        shell: bash
      - name: "Build"
        working-directory: SystemReference
        run: |
          fprime-util build raspberrypi --j8
        shell: bash
